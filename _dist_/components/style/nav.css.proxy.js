// [snowpack] add styles to the page (skip if no document exists)
if (typeof document !== 'undefined') {
  const code = "@media screen and (max-width: 600px) {\n  .desktop {\n    display: none;\n  }\n\n  .mobile {\n    display: inherit;\n  }\n}\n@media screen and (min-width: 600px) {\n  .desktop {\n    display: inherit;\n  }\n\n  .mobile {\n    display: none;\n    position: absolute;\n  }\n}\n/* || Global  */\n.nav {\n  height: 100%;\n  background-color: var(--dark-color);\n  opacity: 0.95;\n  color: var(--light-color);\n  font-family: futura-pt-bold;\n  text-transform: uppercase;\n  position: sticky;\n  top: 0;\n}\n.nav a {\n  /* Make links look like normal text */\n  color: inherit;\n  text-decoration: none;\n}\n\n.navbar {\n  display: flex;\n  background-color: rgba(0, 0, 0, 0.85);\n}\n\n/* || Desktop */\n.desktop {\n  height: 100%;\n  width: 100%;\n}\n.desktop .navbar {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 2em 5vw 2em 5vw;\n  top: 0;\n  max-height: 7em;\n}\n.desktop .navbar .logo {\n  max-height: 2em;\n  width: auto;\n  padding-right: 1em;\n}\n.desktop .navbar nav {\n  padding-left: 1em;\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n.desktop .navbar nav .item {\n  padding-inline-start: 0.5em;\n  padding-inline-end: 0.5em;\n}\n.desktop .navbar nav .folder .items {\n  display: none;\n  text-align: left;\n  background-color: var(--light-color);\n  transform: translateZ(100%);\n  box-shadow: 0.1em 0.1em 0.1em #000;\n  color: var(--dark-color);\n  animation-duration: 300ms;\n  animation-name: growDown;\n  animation-timing-function: ease-in-out;\n  animation-fill-mode: forwards;\n}\n.desktop .navbar nav .folder > .item {\n  padding-inline-start: 0em;\n  padding-inline-end: 0em;\n}\n.desktop .navbar nav .folder:hover .items {\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  color: black;\n  opacity: 1;\n  transform-origin: top center;\n}\n.desktop .navbar nav .folder:hover .items caret .item {\n  display: block;\n}\n\n/* || Hamburger Menu */\n.ham > div {\n  width: 7vw;\n  height: 1vw;\n  background-color: #FFF;\n  margin: 1.5vw 0;\n  transition: 0.4s;\n}\n.ham #ham1.changed {\n  transform: translateY(2.5vw) rotate(45deg);\n}\n.ham #ham2.changed {\n  transform: translateX(-50px);\n  opacity: 0;\n}\n.ham #ham3.changed {\n  transform: translateY(-2.5vw) rotate(-45deg);\n}\n\n/* || Mobile */\n.mobile .logo {\n  display: block;\n  align-self: center;\n  max-height: 2em;\n  margin: 0 auto;\n  max-width: 75%;\n}\n.mobile > .navbar {\n  flex: 0 1 auto;\n  height: 5em;\n  width: 100%;\n  z-index: 999;\n}\n.mobile > .navbar .ham {\n  position: absolute;\n  display: block;\n  align-self: center;\n  left: 5%;\n}\n.mobile .item {\n  margin-left: 1em;\n  margin-bottom: 1.5em;\n}\n.mobile .side {\n  transition: 300ms;\n  transform: translateX(-100%);\n  position: fixed;\n  z-index: 899;\n  text-align: left;\n  flex: 1 1 auto;\n  float: left;\n  overflow-y: scroll;\n  top: 5em;\n  bottom: 0;\n  width: 80%;\n  background: black;\n  background: rgba(0, 0, 0, 0.85);\n  display: flex;\n  flex-direction: column;\n}\n.mobile .side.visible {\n  display: inherit;\n  transform: translateX(0);\n}\n.mobile .side .container {\n  padding-top: 1em;\n  padding-left: 1em;\n  padding-right: 1em;\n  padding-bottom: 0;\n  overflow-y: scroll;\n  position: relative;\n  background: transparent;\n  bottom: 0;\n}\n.mobile .side .folder > .items {\n  display: none;\n  animation-duration: 300ms;\n  animation-name: growDown;\n  animation-timing-function: ease-in-out;\n  animation-fill-mode: forwards;\n  transition: 300ms;\n}\n.mobile .side .folder .name {\n  margin-bottom: 1.5em;\n}\n.mobile .side .folder .name::after {\n  content: \" +\";\n}\n.mobile .side .folder.open .items {\n  display: block;\n  transform-origin: top center;\n}\n.mobile .side .folder.open .name::after {\n  content: \" -\";\n}\n.mobile .side .folder.open .item {\n  margin-left: 1em;\n  margin-top: 1em;\n}\n\n@keyframes growDown {\n  0% {\n    transform: scaleY(0);\n  }\n  80% {\n    transform: scaleY(1.1);\n  }\n  100% {\n    transform: scaleY(1);\n  }\n}";

  const styleEl = document.createElement("style");
  const codeEl = document.createTextNode(code);
  styleEl.type = 'text/css';
  styleEl.appendChild(codeEl);
  document.head.appendChild(styleEl);
}